drop table mesaje;
create table mesaje(
message_id number generated by default on null as identity, 
message varchar2(255), 
message_type varchar2(1), 
created_by varchar2(40) not null, 
created_at date not null,
constraint msg_pk primary key(message_id),
constraint msg_ck check (message_type in ('E', 'W', 'I')));

create or replace procedure jurnal(mesaj varchar2, tip varchar2) is
pragma autonomous_transaction;
begin
insert into mesaje(message, message_type, created_by, created_at) values (mesaj, tip, user, sysdate);
commit;
end;
/

create or replace trigger dec_tranzactii_nivel_comanda before
insert or update or delete on tranzactii
begin
  case
    when inserting then
      jurnal('declansator comanda adaugare in tranzactii', 'w');
    when updating then
      jurnal('declansator comanda modificare in tranzactii', 'w');
    when deleting then
      jurnal('declansator comanda stergere in tranzactii', 'w');
  end case;
end;
/

create or replace trigger dec_tranzactii_nivel_linie
after insert or update or delete on tranzactii
for each row
begin
  case
    when inserting then
      jurnal('declansator line adaugare in tranzactii id:'||:new.id_tranzactie, 'w');
    when updating then
      jurnal('declansator linie modificare in tranzactii id:'||:old.id_tranzactie, 'w');
    when deleting then
      jurnal('declansator linie stergere in tranzactii id:'||:old.id_tranzactie, 'w');
  end case;
end;
/

create or replace trigger dec_autentificare_utilizator
after logon
on poc.schema
begin
 jurnal('declansator autentificare utiizator bd', 'w');
end;
/

create or replace trigger dec_iesire_utilizator
before logoff
on poc.schema
begin
  jurnal('declansator iesire utiizator bd', 'w');
end;
/

create or replace package tranzactii_pkg as
    procedure afiseaza_tranzactii_cont_debitor;
    procedure afiseaza_tranzactii_cont_creditor;
    function echipament_comerciant(p_client_nume varchar2) return varchar2;
end;
/

create or replace package body tranzactii_pkg as

    procedure afiseaza_tranzactii_cont_debitor as
        type tranzactii_t is table of tranzactii%rowtype;
        cursor c_tranzactii is select * from tranzactii fetch first 8 rows only;
        c_nr_max pls_integer default 3;
        v_tranzactii tranzactii_t;
        begin
        open c_tranzactii;
        loop
            fetch c_tranzactii bulk collect into v_tranzactii limit c_nr_max;
            for i in 1..v_tranzactii.count loop
              dbms_output.put_line('index: '||i ||' valoare: '||v_tranzactii(i).cod_cont_debitor);
            end loop;
            exit when v_tranzactii.count = 0;
        end loop;
        close c_tranzactii;
    end afiseaza_tranzactii_cont_debitor;
    
    procedure afiseaza_tranzactii_cont_creditor as
        type tranzactii_v is varray(5) of tranzactii%rowtype;
        cursor c_tranzactii is select * from tranzactii fetch first 5 rows only;
        v_tranzactii tranzactii_v := tranzactii_v();
        begin
        for r_tranzactie in c_tranzactii loop
            v_tranzactii.extend;
            v_tranzactii(v_tranzactii.LAST).cod_cont_creditor := r_tranzactie.cod_cont_creditor;
        end loop;
        for i in v_tranzactii.first..v_tranzactii.last loop
            dbms_output.put_line('index: '||i ||' valoare: '||v_tranzactii(i).cod_cont_creditor);
        end loop;
    end afiseaza_tranzactii_cont_creditor;
        
    function echipament_comerciant(p_client_nume varchar2) return varchar2 as
        r_client client%rowtype;
        r_comerciant comerciant%rowtype;
        r_canal_plata canal_plata%rowtype;
        v_mesaj mesaje.message%type;
        begin
        select * into r_client from client where nume = p_client_nume;
        jurnal('p_client_nume = ' ||p_client_nume||' '||r_client.id_client, 'I');
        select * into r_comerciant from comerciant where cod_client = r_client.id_client;
        jurnal('comerciant = ' ||' '||r_comerciant.nume, 'I');
        select * into r_canal_plata from canal_plata where cod_comerciant = r_comerciant.id_comerciant;
        jurnal('canal_plata = ' ||' '||r_canal_plata.tip_echipament, 'I');
        return r_canal_plata.tip_echipament;
        exception
        when others then
        v_mesaj := substr(SQLERRM, 1,255);
        jurnal(v_mesaj, 'E');
        return 'UNKNOWN';
    end echipament_comerciant;
end;
/

show error

set serveroutput on;

truncate table mesaje;

exec tranzactii_pkg.afiseaza_tranzactii_cont_debitor;
exec tranzactii_pkg.afiseaza_tranzactii_cont_creditor;

select tranzactii_pkg.echipament_comerciant('Glovo')
,      tranzactii_pkg.echipament_comerciant('Auchan')
,      tranzactii_pkg.echipament_comerciant('Metro') 
from dual;

delete from tranzactii where id_tranzactie = (select max(id_tranzactie) from tranzactii);
rollback;

select * from mesaje;
